[user]
    name = Scott Cranfill
    email = scott@scottcranfill.com

[core]
    excludesfile = ~/.gitignore_global

[color]
    ui = auto

[filter "media"]
    clean = git-media-clean %f
    smudge = git-media-smudge %f

[http]
    # Enable large file support for git push
    postBuffer = 524288000

[include]
    path = .gitconfig_local

[init]
    templatedir = ~/.git-templates

[merge]
    tool = opendiff

[mergetool]
    keepBackup = true

[alias]
    st = status

    cl = clone

    cm = commit
    cmm = commit -m
    cmam = commit -a -m
    cma = commit --amend
    amend = commit --amend
    caa = commit -a --amend -C HEAD

    po = push origin
    pu = push upstream

    filelog = log -u
    fl = log -u

    ai = add --interactive

    # branching
    co = checkout
    cob = checkout -b
    br = branch 
    #"!git branch -ra | grep -v done"
    bra = branch -ra
    brd = branch -d
    brD = branch -D

    # "delete remote branch ______"
    brdre = push origin --delete

    # fetch/rebase
    fu = fetch upstream -v
    fo = fetch origin -v
    rum = rebase upstream/master
    rug = rebase upstream/gh-pages
    rom = rebase origin/master
    rog = rebase origin/gh-pages
    
    # list commands
    le = log --oneline --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
    ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lc  = "!f() { git ll "$1"^.."$1"; }; f"
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    lol = log --graph --oneline --decorate --all
    
    # list all aliases
    la = "!git config -l | grep alias | cut -c 7-"
    
    diff = diff --word-diff
    d = diff --word-diff
    dc = diff --cached
    
    # list modified files in last commit
    dl = "!git ll -1"
    
    # diff last commit
    dlc = diff --cached HEAD^
    dr  = "!f() { git diff "$1"^.."$1"; }; f"
    diffr  = "!f() { git diff "$1"^.."$1"; }; f"
    branch = branch -ra

    # reset commands
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

    # git svn
    svnr = svn rebase
    svnd = svn dcommit
    svnl = svn log --oneline --show-commit

    # stash
    sl = stash list
    sa = stash apply
    ss = stash save

    cp = cherry-pick

    grep = grep -Ii
    gr = grep -Ii
    # grep from root folder
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
    # grep on filename
    f = "!git ls-files | grep -i"

    # rename branch tree to done-
    done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

    # assume aliases
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    # show assumed files
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    # unassume all the assumed files
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

    lasttag = describe --tags --abbrev=0
    lt = describe --tags --abbrev=0

    #merges
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"

    #remotes
    re = remote -v
    rea = remote add
