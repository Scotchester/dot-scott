[alias]
	# index management
	st = status
	a = add
	ai = add --interactive
	cp = cherry-pick
	r = restore
	discard = restore
	rs = restore --staged
	unstage = restore --staged

	# committing
	cm = commit
	cmm = commit -m
	cmam = commit -a -m
	cma = commit --amend
	amend = commit -a --amen
	caa = commit -a --amend -C HEAD

	# branch management
	br = branch --sort=-committerdate
	brd = branch -d
	brD = branch -D
	## delete remote branch with `g brdre <BRANCH-NAME>`
	brdre = push origin --delete
	co = checkout  # deprecated in favor of switch
	cob = checkout -b  # deprecated in favor of switch -c
	sw = switch
	swc = switch -c
	## check out a PR branch with `g prc <PR-NUMBER>`
	prc = pr checkout

	# working with remotes
	cl = clone
	re = remote -v
	rea = remote add
	fu = fetch upstream -v
	fo = fetch origin -v
	po = push origin
	pu = push upstream
	pof = push origin --force-with-lease
	puf = push upstream --force-with-lease
	pot = push origin --tags
	put = push upstream --tags

	# rebasing
	rum = rebase upstream/main
	rug = rebase upstream/gh-pages
	rom = rebase origin/main
	rog = rebase origin/gh-pages
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive

	# logs
	filelog = log -u
	fl = log -u
	le = log --oneline --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
	ldr = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	lol = log --graph --oneline --decorate --all
	## list modified files in last commit
	dl = "!git ll -1"

	# diffing
	d = diff --word-diff
	dc = diff --cached
	diff = diff --word-diff
	## diff last commit
	dlc = diff --cached HEAD^
	## diff specific revision with `g dr <SHA>`
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"

	# undoing history
	## undo the last commit, adding its changes to the index (i.e., staged for commit)
	undo = reset --soft HEAD~1
	## undo the last commit, discarding its committed and any staged and uncommitted changes since then
  undohard = reset --hard HEAD~1

	# stash
	sa = stash apply
	sl = stash list
	sp = stash pop
	ss = stash save

	# finding stuff
	grep = grep -Ii
	gr = grep -Ii
	## grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	## grep on filename
	f = "!git ls-files | grep -i"

	# tag stuff
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0

[color]
	ui = true

[color "diff"]
	meta = 11
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = black bold red
	newNormal = green bold
	newHighlight = black bold green

[core]
	pager = diff-so-fancy | less --tabs=4 -RFX

[credential]
	helper = osxkeychain

[diff]
	colorMoved = zebra

[diff-so-fancy]
	stripLeadingSymbols = false
	markEmptyLines = false

[pull]
	ff = only

[push]
  default = current

[user]
	name = Scott Cranfill
	email = scott@scottcranfill.com
